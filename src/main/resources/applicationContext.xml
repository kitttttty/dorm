<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
		
	<!-- 通知spring使用cglib而不是jdk的来生成代理方法 AOP可以拦截到Controller -->
	<aop:aspectj-autoproxy proxy-target-class="true" />  
	<!-- 配置Spring框架注解注入需要所描的路径 -->
	<context:component-scan base-package="com.partner.dorm" />
	<!-- 指定数据库配置文件的位置 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- datasource -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${dorm.jdbc.url}"/>
		<property name="username" value="${dorm.jdbc.username}"/>
		<property name="password" value="${dorm.jdbc.password}"/>
		<property name="initialSize" value="${datasource.initial.size}"/>
		<property name="maxActive" value="${datasource.max.size}"/>
		<property name="minIdle" value="${datasource.min.idle}"/>
		<property name="maxWait" value="60000"/>
		<property name="poolPreparedStatements" value="false"/>
		<property name="validationQuery" value="${datasource.validation.query}"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>
		<property name="testWhileIdle" value="true"/>
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>
		<property name="minEvictableIdleTimeMillis" value="300000"/>
		<property name="removeAbandoned" value="true"/>
		<property name="removeAbandonedTimeout" value="1800"/>
		<property name="logAbandoned" value="true"/>
		<property name="filters" value="stat"/>
		<property name="proxyFilters">
			<list>
				<bean class="com.alibaba.druid.filter.logging.Log4jFilter">
					<property name="statementExecutableSqlLogEnable" value="false"/>
				</bean>
			</list>
		</property>
	</bean>

	<!-- 事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 开启事务 -->
	<tx:annotation-driven/>

	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath:/mapper/*Mapper.xml"/>
		<property name="typeAliasesPackage" value="com.partner.dorm"/>
		<property name="plugins">
			<list>
				<!-- 分页插件配置 -->
				<bean id="paginationInterceptor" class="com.baomidou.mybatisplus.plugins.PaginationInterceptor">
					<property name="dialectType" value="mysql"/>
				</bean>
			</list>
		</property>
	</bean>

	<!-- 直接配置mapper的路径，这个路径下面的所有映射器都会自动创建成MapperFactoryBean -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.groupEleventh.crm.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>

</beans>